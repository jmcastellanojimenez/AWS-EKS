name: 🚀 SA Infra - Complete Ingress Deployment

on:
  workflow_dispatch:
    inputs:
      ingress_pattern:
        description: 'Ingress Pattern to Deploy'
        required: true
        default: 'alb'
        type: choice
        options:
        - alb
        - nginx
        - both
      environment:
        description: 'Target Environment'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - staging
        - prod
      domain_name:
        description: 'Domain name for ingress'
        required: true
        default: 'k8s-demo.local'
        type: string
      cluster_name:
        description: 'EKS Cluster Name'
        required: true
        default: 'eks-learning-lab-dev'
        type: string
      hosted_zone_id:
        description: 'Route53 hosted zone ID (leave empty to auto-create)'
        required: false
        type: string
      ssl_email:
        description: 'Email for SSL certificates'
        required: false
        default: 'admin@example.com'
        type: string
      deploy_demo_apps:
        description: 'Deploy Demo Applications'
        required: false
        default: true
        type: boolean
      skip_validation:
        description: 'Skip validation tests (faster deployment)'
        required: false
        default: false
        type: boolean
      aws_region:
        description: 'AWS Region'
        required: false
        default: 'us-east-1'
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  infrastructure:
    name: 🏗️ Infrastructure Foundation
    uses: ./.github/workflows/ingress-infrastructure.yml
    with:
      domain_name: ${{ inputs.domain_name }}
      environment: ${{ inputs.environment }}
      hosted_zone_id: ${{ inputs.hosted_zone_id }}
      aws_region: ${{ inputs.aws_region }}
    secrets: inherit

  controllers:
    name: 🎮 Kubernetes Controllers
    needs: infrastructure
    uses: ./.github/workflows/ingress-controllers.yml
    with:
      ingress_pattern: ${{ inputs.ingress_pattern }}
      cluster_name: ${{ inputs.cluster_name }}
      domain_name: ${{ inputs.domain_name }}
      ssl_email: ${{ inputs.ssl_email }}
      deploy_demo_apps: ${{ inputs.deploy_demo_apps }}
      alb_controller_role_arn: ${{ needs.infrastructure.outputs.alb_controller_role_arn }}
      external_dns_role_arn: ${{ needs.infrastructure.outputs.external_dns_role_arn }}
      cert_manager_role_arn: ${{ needs.infrastructure.outputs.cert_manager_role_arn }}
    secrets: inherit

  validation:
    name: 🧪 Validation & Testing
    needs: [infrastructure, controllers]
    if: ${{ inputs.skip_validation != true }}
    uses: ./.github/workflows/ingress-validation.yml
    with:
      demo_app_urls: ${{ needs.controllers.outputs.demo_app_urls }}
      expected_ingress_classes: ${{ inputs.ingress_pattern == 'both' && '["alb","nginx"]' || format('["{0}"]', inputs.ingress_pattern) }}
      cluster_name: ${{ inputs.cluster_name }}
      test_timeout: '300s'
    secrets: inherit

  notification:
    name: 📢 Send Notification
    runs-on: ubuntu-latest
    needs: [infrastructure, controllers, validation]
    if: always()
    steps:
      - name: 📊 Determine Overall Status
        id: status
        run: |
          INFRA_STATUS="${{ needs.infrastructure.result }}"
          CONTROLLERS_STATUS="${{ needs.controllers.result }}"
          VALIDATION_STATUS="${{ needs.validation.result }}"
          
          echo "Infrastructure: $INFRA_STATUS"
          echo "Controllers: $CONTROLLERS_STATUS"
          echo "Validation: $VALIDATION_STATUS"
          
          # Determine overall status
          OVERALL_STATUS="success"
          SUMMARY_ICON="✅"
          
          if [[ "$INFRA_STATUS" == "failure" || "$CONTROLLERS_STATUS" == "failure" ]]; then
            OVERALL_STATUS="failure"
            SUMMARY_ICON="❌"
          elif [[ "$VALIDATION_STATUS" == "failure" ]]; then
            OVERALL_STATUS="warning"
            SUMMARY_ICON="⚠️"
          elif [[ "$VALIDATION_STATUS" == "skipped" ]]; then
            OVERALL_STATUS="success"
            SUMMARY_ICON="✅"
          fi
          
          echo "overall_status=$OVERALL_STATUS" >> $GITHUB_OUTPUT
          echo "summary_icon=$SUMMARY_ICON" >> $GITHUB_OUTPUT

      - name: 💬 Send Slack Notification
        if: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          # Determine color based on status
          COLOR="good"
          if [[ "${{ steps.status.outputs.overall_status }}" == "failure" ]]; then
            COLOR="danger"
          elif [[ "${{ steps.status.outputs.overall_status }}" == "warning" ]]; then
            COLOR="warning"
          fi
          
          # Prepare validation results
          VALIDATION_TEXT="Skipped"
          if [[ "${{ needs.validation.result }}" != "skipped" ]]; then
            if [[ "${{ needs.validation.outputs.all_tests_passed }}" == "true" ]]; then
              VALIDATION_TEXT="✅ All tests passed"
            else
              VALIDATION_TEXT="❌ Some tests failed"
            fi
          fi
          
          cat > slack-payload.json << EOF
          {
            "attachments": [
              {
                "color": "$COLOR",
                "title": "${{ steps.status.outputs.summary_icon }} SA Infra - Complete Ingress Deployment",
                "fields": [
                  {
                    "title": "Environment",
                    "value": "${{ inputs.environment }}",
                    "short": true
                  },
                  {
                    "title": "Pattern",
                    "value": "${{ inputs.ingress_pattern }}",
                    "short": true
                  },
                  {
                    "title": "Domain",
                    "value": "${{ inputs.domain_name }}",
                    "short": true
                  },
                  {
                    "title": "Cluster",
                    "value": "${{ inputs.cluster_name }}",
                    "short": true
                  },
                  {
                    "title": "Infrastructure",
                    "value": "${{ needs.infrastructure.result }}",
                    "short": true
                  },
                  {
                    "title": "Controllers",
                    "value": "${{ needs.controllers.result }}",
                    "short": true
                  },
                  {
                    "title": "Validation",
                    "value": "$VALIDATION_TEXT",
                    "short": false
                  }
                ],
                "footer": "SA Fast Infra Provisioning System",
                "ts": $(date +%s)
              }
            ]
          }
          EOF
          
          curl -X POST -H 'Content-type: application/json' \
            --data @slack-payload.json \
            "${{ secrets.SLACK_WEBHOOK_URL }}" || echo "Failed to send Slack notification"

      - name: 📋 Deployment Summary
        run: |
          echo "## 🚀 SA Complete Ingress Deployment - Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Overall Status**: ${{ steps.status.outputs.summary_icon }} **${{ steps.status.outputs.overall_status }}**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📋 Configuration" >> $GITHUB_STEP_SUMMARY
          echo "- **Pattern**: ${{ inputs.ingress_pattern }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: ${{ inputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Domain**: ${{ inputs.domain_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Cluster**: ${{ inputs.cluster_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Region**: ${{ inputs.aws_region }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Demo Apps**: ${{ inputs.deploy_demo_apps }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🏗️ Deployment Results" >> $GITHUB_STEP_SUMMARY
          
          # Infrastructure results
          if [[ "${{ needs.infrastructure.result }}" == "success" ]]; then
            echo "- ✅ **Infrastructure Foundation**: Deployed successfully" >> $GITHUB_STEP_SUMMARY
            echo "  - Hosted Zone: \`${{ needs.infrastructure.outputs.hosted_zone_id }}\`" >> $GITHUB_STEP_SUMMARY
            echo "  - IAM Roles: Created for ALB, external-dns, cert-manager" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ❌ **Infrastructure Foundation**: Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Controllers results
          if [[ "${{ needs.controllers.result }}" == "success" ]]; then
            echo "- ✅ **Kubernetes Controllers**: Deployed successfully" >> $GITHUB_STEP_SUMMARY
            
            if [[ "${{ inputs.ingress_pattern }}" == "alb" || "${{ inputs.ingress_pattern }}" == "both" ]]; then
              echo "  - AWS Load Balancer Controller (ALB)" >> $GITHUB_STEP_SUMMARY
            fi
            
            if [[ "${{ inputs.ingress_pattern }}" == "nginx" || "${{ inputs.ingress_pattern }}" == "both" ]]; then
              echo "  - NGINX Ingress Controller" >> $GITHUB_STEP_SUMMARY
            fi
            
            echo "  - cert-manager (SSL certificates)" >> $GITHUB_STEP_SUMMARY
            echo "  - external-dns (Route53 integration)" >> $GITHUB_STEP_SUMMARY
            
            if [[ "${{ inputs.deploy_demo_apps }}" == "true" ]]; then
              echo "  - Demo applications" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "- ❌ **Kubernetes Controllers**: Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Validation results
          if [[ "${{ needs.validation.result }}" == "success" ]]; then
            echo "- ✅ **Validation Tests**: All tests passed" >> $GITHUB_STEP_SUMMARY
            if [[ -n "${{ needs.validation.outputs.dns_resolution_time }}" ]]; then
              echo "  - DNS Resolution: ${{ needs.validation.outputs.dns_resolution_time }}" >> $GITHUB_STEP_SUMMARY
            fi
            if [[ -n "${{ needs.validation.outputs.response_time_p95 }}" ]]; then
              echo "  - Response Time P95: ${{ needs.validation.outputs.response_time_p95 }}" >> $GITHUB_STEP_SUMMARY
            fi
            if [[ -n "${{ needs.validation.outputs.ssl_grade }}" ]]; then
              echo "  - SSL Grade: ${{ needs.validation.outputs.ssl_grade }}" >> $GITHUB_STEP_SUMMARY
            fi
          elif [[ "${{ needs.validation.result }}" == "failure" ]]; then
            echo "- ❌ **Validation Tests**: Some tests failed" >> $GITHUB_STEP_SUMMARY
          elif [[ "${{ needs.validation.result }}" == "skipped" ]]; then
            echo "- ⏭️ **Validation Tests**: Skipped (skip_validation=true)" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🌐 Access Information" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ inputs.deploy_demo_apps }}" == "true" && "${{ needs.controllers.result }}" == "success" ]]; then
            echo "**Demo Application URLs:**" >> $GITHUB_STEP_SUMMARY
            
            if [[ "${{ inputs.ingress_pattern }}" == "alb" || "${{ inputs.ingress_pattern }}" == "both" ]]; then
              echo "- ALB Demo: \`https://demo-alb.${{ inputs.domain_name }}\`" >> $GITHUB_STEP_SUMMARY
            fi
            
            if [[ "${{ inputs.ingress_pattern }}" == "nginx" || "${{ inputs.ingress_pattern }}" == "both" ]]; then
              echo "- NGINX Demo: \`https://demo-nginx.${{ inputs.domain_name }}\`" >> $GITHUB_STEP_SUMMARY
            fi
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ✅ Next Steps" >> $GITHUB_STEP_SUMMARY
          echo "1. **Deploy your applications** with ingress resources" >> $GITHUB_STEP_SUMMARY
          echo "2. **Monitor** ingress controllers and certificates" >> $GITHUB_STEP_SUMMARY
          echo "3. **Scale** as needed based on traffic patterns" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "*Deployed with SA Fast Infra Provisioning System*" >> $GITHUB_STEP_SUMMARY